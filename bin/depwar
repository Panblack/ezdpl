#!/bin/bash

# Main
# get EZDPL_HOME
if [[ -z ${EZDPL_HOME} ]]; then
    _dir=$(dirname `readlink -f $0`)
    _last_dir=` echo "$_dir"|awk -F'/' '{print $NF}'`
    EZDPL_HOME=`echo "$_dir"|sed 's/\/'$_last_dir'//g'`    
fi

# 基础变量
# 获取 $_OPER_PATH $_WARS_RUN $_WAR_LST_FILE $_WEBSERVERS_LST_FILE _WAR_DEPLOY_DELAY 变量
source ${EZDPL_HOME}/conf/deploy.include 
_usage="Usage: depwar <war_name> <d|u> <version_dir> <Confirm? y|n>\n d - use deployWebxml\n u - undeploy "

# 依赖目录： ${_WARS_RUN}/${_warName} , ${_warSharedRunningDir} , 
#参数变量
_warName=$1
_oper=$2
_version_dir=$3
_warSharedRunningDir="${_WARS_RUN}/${_warName}"
_path_new=${_warSharedRunningDir}/${_version_dir}
if [[ $# -eq 0 ]] ; then
    echo -e "$_usage"
    echo "WARS_RUN: ${_WARS_RUN}"
    ls -1 "${_WARS_RUN}"
    exit 1
fi
if [[ ! -d ${_warSharedRunningDir} ]]; then
    echo -e "$_usage"
    echo "${_warSharedRunningDir} does not exist.";ls -1 ${_WARS_RUN} 2>/dev/null;exit 1
fi
if [[ $_oper != d ]] && [[ $_oper != u ]] ; then
    echo -e "$_usage"
    echo "Only d|u is valid.";exit 1
fi
if [[ $# -lt 3 ]] ; then
    echo -e "$_usage"
    echo  "${_warSharedRunningDir}"
    ls -1 "${_warSharedRunningDir}" 2>/dev/null | grep -v versions
    exit 1
fi
if [[ ! -d ${_path_new} ]]; then
    echo -e "$_usage"
    echo "${_path_new} does not exists.";exit 1
fi
if [[ $4 = "n" ]]; then
    _confirm="n"
else 
    _confirm="y"
fi

set -u 

# 发版日志
_log_file=${_OPER_PATH}/depwar.log
touch $_log_file
echo -e "\n\n" >> $_log_file

# 获取wars信息，如有同名warName则只取第一条，去掉所有空格和TAB 
#warName|warDeployName|webName|configFilesPath|gitBranch|gitRepo|codeDir|runTest
#   1       2            3          4              5        6       7       8
if [[ -f "$_WAR_LST_FILE" ]]; then
    ls $_WAR_LST_FILE
    _warInfo=`cat $_WAR_LST_FILE | egrep -v '(^ *#|^$)' | awk -F'|' '{if ( $1 == "'${_warName}'" ) print $0}' | head -1 `
else
    echo "`date +%F_%T` $_WAR_LST_FILE does not exist." | tee -a $_log_file ; exit 1
fi
if [[ -z $_warInfo ]]; then
    echo "`date +%F_%T` $_warName not configured in $_WAR_LST_FILE ." | tee -a $_log_file ; exit 1
fi
_warInfo=`      echo "$_warInfo" |sed 's/[ \t]//g'`
_warDeployName=`echo "$_warInfo" |awk -F'|' '{print $2}'`
_warWebName=`   echo "$_warInfo" |awk -F'|' '{print $3}'`

# 获取webservers信息，去掉所有空格和TAB 
#webName|serverName|ServerIp|serverUser|serverPort|targetPath|deployMode(war/xml)|needRestart|webPort
#   1        2		3	   4	 	5	6	  7			8	9
if [[ -f "$_WEBSERVERS_LST_FILE" ]]; then
    ls $_WEBSERVERS_LST_FILE
    _servers=`cat $_WEBSERVERS_LST_FILE | egrep -v '(^ *#|^$)' | awk -F'|' '{if ( $1 == "'${_warWebName}'" ) print $0}' `
else
    echo "`date +%F_%T` $_WEBSERVERS_LST_FILE does not exist."   | tee -a $_log_file ; exit 1
fi
if [[ -z $_servers ]]; then
    echo "`date +%F_%T` no webserver defined for $_warWebName ." | tee -a $_log_file ; exit 1
fi

_servers=`echo "$_servers" | sed 's/[ \t]//g'`
echo -e "`date +%F_%T` $_warName $_oper $_version_dir\nWarInfo:\n${_warInfo}\nServers:\n${_servers}"  | tee -a $_log_file
echo 

if [[ $_confirm = "y" ]]; then
    read -p "Enter Y to continue, Enter to quit: " _Y
    if [[ $_Y != "Y" ]]; then
    	echo "Aborted." | tee -a $_log_file
    	exit 
    fi
fi
for ((i=1;i<=5;i++)); do sleep 1 ; echo -n . ; done ; echo

IFS=$'\n'
case $_oper in 
    d)
	for x in $_servers; do 
	    _webServerName=` echo $x|awk -F'|' '{print $2}'`
	    _webServerIp=`   echo $x|awk -F'|' '{print $3}'`
	    _webServerUser=` echo $x|awk -F'|' '{print $4}'`
	    _webServerPort=` echo $x|awk -F'|' '{print $5}'`
	    _webTargetPath=` echo $x|awk -F'|' '{print $6}'`
	    _webDeployMode=` echo $x|awk -F'|' '{print $7}'`
	    _webNeedRestart=`echo $x|awk -F'|' '{print $8}'`
	    _webPort=`       echo $x|awk -F'|' '{print $9}'`
	    echo "warName:        $_warName"		 | tee -a $_log_file 
	    echo "warDeployName:  $_warDeployName"	 | tee -a $_log_file 
	    echo "warWebName:     $_warWebName"		 | tee -a $_log_file 
	    echo "webTargetPath:  $_webTargetPath"	 | tee -a $_log_file 
	    echo "webDeployMode:  $_webDeployMode"	 | tee -a $_log_file 
	    echo "webNeedRestart: $_webNeedRestart"	 | tee -a $_log_file 
            echo "webPort:        $_webPort"      	 | tee -a $_log_file 
            echo "webServerName:  $_webServerName"     	 | tee -a $_log_file 
	    echo "webServer:      ${_webServerUser}@${_webServerIp}:${_webServerPort}" | tee -a $_log_file
	    echo 
	    case $_webDeployMode in
		xml)
		    # 连接远程服务器，运行/usr/local/bin/deployWebxml脚本，携带必要参数
                    ssh -p ${_webServerPort} ${_webServerUser}@${_webServerIp} \
		      "/usr/local/bin/deployWebxml ${_warWebName} ${_warDeployName} d ${_path_new}/${_warDeployName}.war ${_webNeedRestart}"
		    ;;
	        war)
		    # 直接上传war包到远程服务器的 targetPath
	    	    if [[ $_webNeedRestart = 'Y' ]]; then
			ssh -p${_webServerPort} ${_webServerUser}@${_webServerIp} "/usr/local/bin/tmc $_warWebName down"
	    	    fi
		    echo;echo "Uploading war file..."
	    	    scp -p -P${_webServerPort} ${_path_new}/${_warDeployName}.war ${_webServerUser}@${_webServerIp}:${_webTargetPath}/
	    	    if [[ $_webNeedRestart = 'Y' ]]; then
			ssh -p${_webServerPort} ${_webServerUser}@${_webServerIp} "/usr/local/bin/tmc $_warWebName up"
	    	    fi
		    ;;
		*)
		    echo "deployMode of $_warWebName is misconfigured, should be xml/war ." | tee -a $_log_file ; exit 1
		    ;;
	    esac 
	    echo "`date +%F_%T` ${_webServerName} deployed ${_path_new}/${_warDeployName}.war ." | tee -a $_log_file ; echo
	    for ((i=1;i<=${_WAR_DEPLOY_DELAY};i++)); do sleep 1 ; echo -n . ; done ; echo
	done
	;;
    u)
	for x in $_servers; do 
            _webServerName=` echo $x|awk -F'|' '{print $2}'`
            _webServerIp=`   echo $x|awk -F'|' '{print $3}'`
            _webServerUser=` echo $x|awk -F'|' '{print $4}'`
            _webServerPort=` echo $x|awk -F'|' '{print $5}'`
            _webTargetPath=` echo $x|awk -F'|' '{print $6}'`
            _webDeployMode=` echo $x|awk -F'|' '{print $7}'`
            _webNeedRestart=`echo $x|awk -F'|' '{print $8}'`
            _webPort=`       echo $x|awk -F'|' '{print $9}'`
            echo "warName:        $_warName"             | tee -a $_log_file
            echo "warDeployName:  $_warDeployName"       | tee -a $_log_file
            echo "warWebName:     $_warWebName"          | tee -a $_log_file
            echo "webTargetPath:  $_webTargetPath"       | tee -a $_log_file
            echo "webDeployMode:  $_webDeployMode"       | tee -a $_log_file
            echo "webNeedRestart: $_webNeedRestart"      | tee -a $_log_file
            echo "webPort:        $_webPort"             | tee -a $_log_file
            echo "webServerName:  $_webServerName"       | tee -a $_log_file 
            echo "webServer:      ${_webServerUser}@${_webServerIp}:${_webServerPort}" | tee -a $_log_file
            echo 
            case $_webDeployMode in
                xml)
		    # 连接远程服务器，运行/usr/local/bin/deployWebxml脚本，携带必要参数
		    ssh -p ${_webServerPort} ${_webServerUser}@${_webServerIp} "/usr/local/bin/deployWebxml ${_warWebName} ${_warDeployName} u yes "
		    ;;
		war)
		    # 连接远程服务器，移除 war 文件
		    ssh -p ${_webServerPort} ${_webServerUser}@${_webServerIp} "/usr/bin/mv -f ${_webTargetPath}/${_warDeployName}.war /tmp/"
		    ;;
                *)
		    echo "deployMode of $_warWebName is misconfigured, should be xml/war ." | tee -a $_log_file ; exit 1
                    ;;
            esac
   	    echo "${_webServerName} undeployed ${_warName} ." | tee -a $_log_file ; echo
	done
	;;
    *)
	echo "Only d|u is valid."
	;;
esac

exit

