#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     10240
    user        haproxy
    group       haproxy
    daemon
    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
    tune.ssl.default-dh-param 1024

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  httpclose
    option                  http-server-close
    option                  http-pretend-keepalive
    option                  dontlognull
    option                  redispatch
    option                  forwardfor except 127.0.0.0/8
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          60m
    timeout server          60m
    timeout http-keep-alive 60s
    timeout check           10s
    maxconn                 10240

#---------------------------------------------------------------------
# main frontend which proxys to the backends
# 2016-04-14 new ip
#---------------------------------------------------------------------
frontend http
    bind *:80
    stats  hide-version

    acl domain_www_example_com          hdr_beg(host) -i www.example.com example.com
    acl domain_weixin_example_com       hdr_beg(host) -i weixin.example.com 
    acl domain_admin_example_com        hdr_beg(host) -i admin.example.com
    acl url_invalid	path_sub -i .xml .php .asp .aspx .sh .git .svn cgi-bin respond.min.js html5shiv.min.js phpmyadmin wordpress wp-admin wp-content phpcms phpMemcachedAdmin struts
    acl url_cn          url_beg  -i /chinese
    acl url_en          url_beg  -i /english

    # Redirect http://admin.example.com to https://admin.example.com
    http-request redirect scheme https if domain_admin_example_com

    # Redirect invalid request to https://www.twitter.com
    http-request redirect location https://www.twitter.com  code 301 if url_invalid

    # Redirect http://www.example.com/chinese/path/to/file.html to http://www.example.com/path/to/file.html
    # Redirect http://www.example.com/english/path/to/file.html to http://www.example.com/en/path/to/file.html
    reqirep ^([^\ ]*)\ /chinese(.*)        \1\ /\2               if domain_www_example_com url_cn
    reqirep ^([^\ ]*)\ /english(.*)        \1\ /en\2             if domain_www_example_com url_en

    use_backend example                 if domain_www_example_com
    use_backend weixin                  if domain_weixin_example_com

frontend https
    bind *:443 ssl crt /etc/haproxy/example.pem
    stats  hide-version

    acl domain_admin_example_com        hdr_beg(host) -i admin.example.com 
    use_backend admin            	if domain_admin_example_com


#Backends

backend example
    mode http
    balance source
    server app01 10.1.1.11:8080 check
    server app02 10.1.1.12:8080 check

backend weixin 
    mode http
    balance source
    server app03 10.1.1.21:8080 check rise 2 fall 2 weight 100
    server app04 10.1.1.22:8080 check rise 2 fall 2 weight 50

backend admin
    mode http
    balance source
    server app05 10.1.1.31:8080 check
    server app06 10.1.1.32:8080 check

