#!/bin/bash
# Deploying configuration descriptor ${catalina.base}/conf/Catalina/localhost/webapp.xml
# vars: _BASES_DIR _WAR_RUNNING_PATH
source /usr/local/bin/japp.include
funHelp() {
    echo -e "Usage:  deployWebxml <web_name> <war_deploy_name> <d|u> <full_war_path> [Y|N]"
    echo -e "Sample: deployWebxml backendapi api2 d /path/to/api2.war N	#Deploy   /path/to/api2.war to '${_BASES_DIR}/backendapi'"
    echo -e "Sample: deployWebxml backendapi api2 u yes 		#Undeploy 'api2' from '${_BASES_DIR}/backendapi'"
    echo -e "Available webs:\n`ls -1 ${_BASES_DIR} ` " ; echo
}

if [[ $# -lt 3 ]] ; then
    funHelp;
    exit 1
fi

_web_name=$1
_war_deploy_name=$2
_oper=$3
_full_war_path=$4
_restart=$5
if [[ -z $_full_war_path ]];then
    echo "Full path of war file required"; exit 1 
fi


if [[ -z $_restart ]]; then
    _restart="N"
fi
set -u 

_war_xml_path="${_BASES_DIR}/$_web_name/conf/Catalina/localhost/"
_war_xml="${_war_xml_path}/${_war_deploy_name}.xml"

case $_oper in 
    d) 
      	# Deploy new/updated war file
        mkdir -p $_war_xml_path
	# wait for nfs delay
	for ((i=1;i<10;i++));do
	    echo -n "."
	    sleep 1
	    test -f $_full_war_path && echo "<Context docBase='$_full_war_path' />" > $_war_xml && break
	done
	if [[ $i = 10 ]];then
	    echo "$_full_war_path NOT FOUND! "; exit 1
	fi
	echo 
   	echo "$_full_war_path Deployed!"
	if [[ $_restart = "Y" ]];then
	    /usr/local/bin/tmc $_web_name rs 
	fi
	;;
    u)
	if [[ $_full_war_path = yes ]]; then
      	    # UnDeploy war file
    	    if [[ -f $_war_xml ]]; then
            	mv -f $_war_xml /tmp/
            	echo "$_war_xml Undeployed!"
    	    else
            	echo "$_war_xml does not exists."; funHelp;  exit 1
    	    fi
        fi
	;;
    *)
	echo "Only d|u is valid."
	;;
esac


