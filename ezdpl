#!/bin/bash
# https://github.com/Panblack/ezdpl
# Last update: 2016-03-30 13:32 (NO scp -p)

funUsage() {
    echo -e "Usage: ./ezdpl <Silent Mode Y|N> <ip address>:[port] <ServerType/Operation> [reboot Y|N(N)] [username(root)]\nServerType/Operation:"
    cd servers; for x in * ; do cd $x; for y in *; do echo $x/`ls -d $y`;done;cd ..;done; cd ..
}

_dir=$(dirname `readlink -f $0`)
cd $_dir
echo "ezdplHome:`pwd`"

if [ -n "$1" ]; then 
  _silent=$1
  if [ "$_silent" != "Y" ]; then
    if [ "$_silent" != "N" ]; then
      echo "The first parameter must be Y or N. Exit!"
      exit 1
    fi
  fi
else
  funUsage
  exit 1
fi

if [ -n "$2" ]; then
  #Detailed param check will be needed.
  _ipaddress=$(echo $2|awk -F':' '{print $1}')
  _port=$(echo $2|awk -F':' '{print $2}')
  if [ ${#_port} -eq 0 ]; then
    _port="22"
  fi
else
  funUsage
  exit 1
fi

if [ -n "$3" ]; then
  _app_version=$3
else
  funUsage
  exit 1
fi

# Optional parameters
if [ -n "$4" ]; then
  _reboot=$4
else 
  _reboot="N"
fi
if [ -n "$5" ]; then
  _username=$5
else
  _username="root"
fi


# Silent mode or not
if [ "$_silent" != "Y" ]; then
  echo
  echo "Ezdpl does things in a raw and simple way."
  echo "https://github.com/Panblack/ezdpl"
  echo 
  echo "Will initialize a new server, configure a server for curtern purpose."
  echo "Usage: ./ezdpl <Silent Mode Y|N> <ip address>:[port] <ServerType/Operation> [reboot Y|N(N)] [username(root)]"
  echo "Manually Initialize 10.1.1.1		 : ./ezdpl.sh N 10.1.1.1 common/init Y"
  echo "Silently Configure 10.1.1.1 as appserver : ./ezdpl.sh Y 10.1.1.1:22 appsrv/init Y root"
  echo

  # Confirmation
  read -p "Will overwrite configuration files or apps on $_ipaddress. Enter Y to continue: "
  if [ "$REPLY" != "Y" ]; then
    echo "Exit"
    exit 0
  fi
fi

# Check
echo "Target Server: ${_ipaddress}..." 
ssh -p $_port $_username@$_ipaddress uname > /dev/null
if [ "$?" != "0" ]; then
  echo
  echo "$_ipaddress is not reachable. "
  exit 1
fi

if [ ! -d "./servers/$_app_version" ]; then
  echo
  echo "There is no $_app_version configured here !"
  exit 1
fi

# Everything seems OK. Go!
echo >> log.txt
echo -n "`date +%Y-%m-%d_%H:%M:%S` ./ezdpl Y $_ipaddress:$_port $_app_version $_reboot $_username" >> log.txt

# Run pre.sh on the target server
if [ -f "./servers/$_app_version/pre.sh" ]; then
  /usr/bin/scp -q -P$_port ./servers/$_app_version/pre.sh $_username@$_ipaddress:/tmp/
  ssh -p$_port $_username@$_ipaddress 'source /etc/profile; sh /tmp/pre.sh'
  _pre=$?
  if [[ $_pre != 0 ]];then 
    echo "$_username@$_ipaddress:/tmp/pre.sh Failed. EXIT!!"
    exit 1
  else
    echo "$_username@$_ipaddress:/tmp/pre.sh executed: $_pre"
  fi
fi

# Start copy app/version/files/*
if [ -d ./servers/$_app_version/files  ]; then 
  echo "Start to copy ./servers/$_app_version/files/*"
  echo "......"
  /usr/bin/scp -rq -P$_port ./servers/$_app_version/files/* $_username@$_ipaddress:/
  echo "./servers/$_app_version/files/* copied: $?"
fi

# Run fin.sh on the target server
if [ -f "./servers/$_app_version/fin.sh" ]; then
  /usr/bin/scp -q -P$_port ./servers/$_app_version/fin.sh $_username@$_ipaddress:/tmp/
  ssh -p$_port $_username@$_ipaddress 'source /etc/profile; sh /tmp/fin.sh'
  _fin=$?
  if [[ $_fin != 0 ]];then
    echo "$_username@$_ipaddress:/tmp/fin.sh Failed. EXIT!!"
    exit 1
  else
    echo "$_username@$_ipaddress:/tmp/fin.sh executed: $_fin"
  fi
fi

# Reboot target server.
if [ "$_reboot" = "Y" ]; then
  echo
  echo "Target server will reboot..."
  echo
  ssh -p $_port $_username@$_ipaddress reboot
fi
echo "Target Server: ${_ipaddress} done!"; echo

echo " OK " >> log.txt
# End of ezdpl
